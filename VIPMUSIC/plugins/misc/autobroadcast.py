import asyncio
import datetime
from VIPMUSIC import app
from pyrogram import Client
from VIPMUSIC.utils.database import get_served_chats
from config import START_IMG_URL, AUTO_GCAST_MSG, AUTO_GCAST, LOGGER_ID
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# Convert AUTO_GCAST to boolean based on "On" or "Off"
AUTO_GCASTS = AUTO_GCAST.strip().lower() == "on"

START_IMG_URLS = "https://telegra.ph/file/b4ed828c1d518a34ac7d3.jpg"

MESSAGES = f"""**·¥Ä·¥Ö·¥†·¥Ä…¥·¥Ñ·¥á·¥Ö ·¥ç·¥ús…™·¥Ñ ·¥ò ü·¥Ä è·¥á Ä  ô·¥è·¥õ “ì·¥è Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥ò ·¥†…™·¥Ö·¥á·¥è·¥Ñ ú·¥Ä·¥õs.
 
 üëë 24√ó7 ·¥ú·¥ò·¥õ…™·¥ç·¥á
 üëë  ü·¥Ä…¢ “ì Ä·¥á·¥á
 üëë ·¥Ä·¥Ö·¥†·¥Ä…¥·¥Ñ·¥á·¥Ö & ·¥ús·¥á“ì·¥ú ü “ì·¥á·¥Ä·¥õ·¥ú Ä·¥ás
 üëë  ü·¥Ä·¥õ·¥ás·¥õ ·¥õ ú·¥ú·¥ç ô…¥·¥Ä…™ ü ·¥ú…™.

·¥è·¥°…¥·¥á Ä :- @ll_CHINTU_lll

üòÄ·¥úÍú±·¥á ¬ª /start ·¥õ·¥è ·¥Ñ ú·¥á·¥Ñ·¥ã  ô·¥è·¥õ.

·¥ä·¥è…™…¥  ü…™…¥·¥ã :- https://t.me/Gleam_moon**"""

BUTTONS = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                "‡πè ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ‡πè",
                url=f"https://t.me/sweetyXmusicbot?startgroup=s&admin=delete_messages+manage_video_chats+pin_messages+invite_users",
            )
        ]
    ]
)

MESSAGE = f"""**‡πè ·¥õ ú…™s …™s ·¥Ä·¥Ö·¥†·¥Ä…¥·¥Ñ·¥á·¥Ö ·¥ç·¥ús…™·¥Ñ ·¥ò ü·¥Ä è·¥á Ä  ô·¥è·¥õ “ì·¥è Ä ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥òs + ·¥Ñ ú·¥Ä…¥…¥·¥á üs ·¥†·¥Ñ. üíå

üéß ·¥ò ü·¥Ä è + ·¥†·¥ò ü·¥Ä è + ·¥Ñ·¥ò ü·¥Ä è üéß

‚û• s·¥ú·¥ò·¥ò·¥è Ä·¥õ·¥á·¥Ö ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á -  ü·¥á“ì·¥õ …¥·¥è·¥õ…™·¥Ñ·¥á, ·¥õ·¥Ä…¢·¥Ä ü ü, ·¥†·¥Ñ·¥õ·¥Ä…¢,  ô·¥Ä…¥ - ·¥ç·¥ú·¥õ·¥á, s ú·¥Ä è Ä…™,  ü·¥ú Ä…™·¥Ñs, s·¥è…¥…¢ - ·¥†…™·¥Ö·¥á·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö, ·¥á·¥õ·¥Ñ... ‚ù§Ô∏è

üîê·¥úÍú±·¥á ¬ª [/start](https://t.me/{app.username}?start=help) ·¥õ·¥è ·¥Ñ ú·¥á·¥Ñ·¥ã  ô·¥è·¥õ

‚û≤  ô·¥è·¥õ :** @{app.username}"""

BUTTON = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton(
                "‡πè ·¥ã…™·¥Ö…¥·¥Ä·¥ò ·¥ç·¥á ‡πè",
                url=f"https://t.me/TG_VC_BOT?startgroup=s&admin=delete_messages+manage_video_chats+pin_messages+invite_users",
            )
        ]
    ]
)

caption = f"""{AUTO_GCAST_MSG}""" if AUTO_GCAST_MSG else MESSAGES

TEXT = """**·¥Ä·¥ú·¥õ·¥è …¢·¥Ñ·¥Äs·¥õ …™s ·¥á…¥·¥Ä ô ü·¥á·¥Ö s·¥è ·¥Ä·¥ú·¥õ·¥è …¢·¥Ñ·¥Äs·¥õ/ ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ …™s ·¥Ö·¥è…™…¥…¢ …™…¥ ·¥Ä ü ü ·¥Ñ ú·¥Ä·¥õs ·¥Ñ·¥è…¥·¥õ…™…¥·¥ú·¥è·¥ús ü è.**\n**…™·¥õ ·¥Ñ·¥Ä…¥  ô·¥á s·¥õ·¥è·¥ò·¥ò·¥á·¥Ö  ô è ·¥ò·¥ú·¥õ ·¥†·¥Ä Ä…™·¥Ä ô ü·¥á [·¥Ä·¥ú·¥õ·¥è_…¢·¥Ñ·¥Äs·¥õ = (Off)]**"""


async def send_text_once():
    try:
        await app.send_message(LOGGER_ID, TEXT)
    except Exception as e:
        pass


async def send_message_to_chats():
    try:
        chats = await get_served_chats()

        for chat_info in chats:
            chat_id = chat_info.get("chat_id")
            if isinstance(chat_id, int):  # Check if chat_id is an integer
                try:
                    await app.send_photo(
                        chat_id,
                        photo=START_IMG_URLS,
                        caption=caption,
                        reply_markup=BUTTONS,
                    )
                    await asyncio.sleep(
                        20
                    )  # Sleep for 20 seconds between sending messages
                except Exception as e:
                    pass  # Do nothing if an error occurs while sending message
    except Exception as e:
        pass  # Do nothing if an error occurs while fetching served chats


async def continuous_broadcast():
    await send_text_once()  # Send TEXT once when bot starts

    while True:
        if AUTO_GCASTS:
            try:
                await send_message_to_chats()
            except Exception as e:
                pass

        # Wait for 100000 seconds before next broadcast
        await asyncio.sleep(100000)


# Start the continuous broadcast loop if AUTO_GCASTS is True
if AUTO_GCASTS:
    asyncio.create_task(continuous_broadcast())
